def build(bld):
    if bld.env.STATIC:
        obj = bld(features = 'cxx cxxstlib')
    else:
        obj = bld(features = 'cxx cxxshlib')

    obj.name = 'libdcp'
    obj.target = 'dcp'
    obj.export_includes = ['.']
    obj.uselib = 'BOOST_FILESYSTEM BOOST_SIGNALS2 OPENSSL SIGC++ LIBXML++ OPENJPEG CXML'
    obj.use = 'libkumu-libdcp libasdcp-libdcp'
    obj.source = """
                 asset.cc
                 dcp.cc        
                 cpl.cc
                 dcp_time.cc
                 gamma_lut.cc
                 metadata.cc
                 mxf_asset.cc
                 picture_asset.cc
                 picture_frame.cc
                 reel.cc
                 argb_frame.cc
                 sound_asset.cc
                 sound_frame.cc
                 subtitle_asset.cc
                 types.cc
                 util.cc
                 version.cc
                 parse/asset_map.cc
                 parse/cpl.cc
                 parse/pkl.cc
                 parse/subtitle.cc
                 """

    headers = """
              asset.h
              cpl.h
              dcp.h
              dcp_time.h
              exceptions.h
              metadata.h
              mxf_asset.h
              picture_asset.h
              picture_frame.h
              reel.h
              argb_frame.h
              sound_asset.h
              sound_frame.h
              subtitle_asset.h
              types.h
              util.h
              version.h
              xml.h
              """

    bld.install_files('${PREFIX}/include/libdcp', headers)
    if bld.env.STATIC:
        bld.install_files('${PREFIX}/lib', 'libdcp.a')

