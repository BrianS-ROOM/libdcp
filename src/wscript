from waflib import TaskGen

def build(bld):
    if bld.env.STATIC:
        obj = bld(features = 'cxx cxxstlib')
    else:
        obj = bld(features = 'cxx cxxshlib')

    obj.name = 'libdcp%s' % bld.env.API_VERSION
    obj.target = 'dcp%s' % bld.env.API_VERSION
    obj.export_includes = ['.']
    obj.uselib = 'BOOST_FILESYSTEM BOOST_SIGNALS2 BOOST_DATETIME OPENSSL SIGC++ LIBXML++ OPENJPEG CXML XMLSEC1'
    obj.use = 'libkumu-libdcp%s libasdcp-libdcp%s' % (bld.env.API_VERSION, bld.env.API_VERSION)
    obj.source = """
                 argb_frame.cc
                 asset.cc
                 certificates.cc
                 colour_matrix.cc
                 content.cc
                 cpl.cc
                 dcp.cc        
                 dcp_time.cc
                 decrypted_kdm.cc
                 decrypted_kdm_key.cc
                 encrypted_kdm.cc
                 exceptions.cc
                 file.cc
                 font.cc
                 gamma_lut.cc
                 image.cc
                 key.cc
                 load_font.cc
                 local_time.cc
                 metadata.cc
                 mono_picture_mxf.cc
                 mono_picture_mxf_writer.cc
                 mono_picture_frame.cc
                 mxf.cc
                 mxf_writer.cc
                 object.cc
                 picture_mxf.cc
                 picture_mxf_writer.cc
                 reel.cc
                 reel_asset.cc
                 reel_mono_picture_asset.cc
                 reel_picture_asset.cc
                 reel_sound_asset.cc
                 reel_stereo_picture_asset.cc
                 reel_subtitle_asset.cc
                 rgb_xyz.cc
                 signer.cc
                 signer_chain.cc
                 sound_mxf.cc
                 sound_mxf_writer.cc
                 sound_frame.cc
                 stereo_picture_mxf.cc
                 stereo_picture_mxf_writer.cc
                 stereo_picture_frame.cc
                 subtitle.cc
                 subtitle_content.cc
                 subtitle_string.cc
                 text.cc
                 types.cc
                 util.cc
                 version.cc
                 xyz_frame.cc
                 """

    headers = """
              asset.h
              certificates.h
              colour_matrix.h
              cpl.h
              content.h
              dcp.h
              dcp_time.h
              decrypted_kdm.h
              encrypted_kdm.h
              exceptions.h
              gamma_lut.h
              image.h
              key.h
              lut_cache.h
              metadata.h
              mono_picture_mxf.h
              mono_picture_frame.h
              mxf.h
              mxf_writer.h
              object.h
              picture_mxf.h
              picture_mxf_writer.h
              rgb_xyz.h
              reel.h
              reel_asset.h
              reel_mono_picture_asset.h
              reel_picture_asset.h
              reel_sound_asset.h
              reel_stereo_picture_asset.h
              ref.h
              argb_frame.h
              signer.h
              signer_chain.h
              sound_frame.h
              sound_mxf.h
              sound_mxf_writer.h
              stereo_picture_mxf.h
              stereo_picture_frame.h
              subtitle.h
              subtitle_content.h
              subtitle_string.h
              types.h
              util.h
              version.h
              xyz_frame.h
              """

    bld.install_files('${PREFIX}/include/libdcp%s/dcp' % bld.env.API_VERSION, headers)
    if bld.env.STATIC:
        bld.install_files('${PREFIX}/lib', 'libdcp%s.a' % bld.env.API_VERSION)
